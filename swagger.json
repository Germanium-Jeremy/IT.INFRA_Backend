{
     "swagger": "2.0",
     "info": {
       "description": "Backend Description of IT.INFRA apis",
       "version": "1.0.0",
       "title": "IT.INFRA",
       "termsOfService": "http://swagger.io/terms/",
       "contact": { "email": "itinfra@it.il" },
       "license": {
         "name": "Apache 2.0",
         "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
       }
     },
     "host": "localhost:3500",
     "basePath": "/",
     "tags": [
       {
         "name": "Users",
         "description": "All Http Request For All Users",
         "externalDocs": "none"
       }
     ],
     "schemes": ["http"],
     "paths": {
       "/allData": {
         "get": {
           "tags": ["Get All Users"],
           "summary": "Finds all users",
           "description": "not much to say",
           "operationId": "findServiceCategories",
           "produces": ["application/json", "application/xml"],
           "responses": {
             "200": {
               "description": "successful operation",
               "schema": {
                 "type": "array",
                 "items": { "$ref": "#/definitions/Users" }
               }
             },
             "400": { "description": "Invalid status value" }
           }
         },
         "post": {
           "tags": ["Add User"],
           "summary": "an api to add new users to the system",
           "description": "Not Much To say",
           "operationId": "AddUserInTheSystem",
           "consumes": ["application/json"],
           "produces": ["application/json"],
           "parameters": [
             {
               "in": "body",
               "name": "body",
               "description": "User Category object that needs to be added to the Db",
               "required": true,
               "schema": { "$ref": "#/definitions/Users" }
             }
           ],
           "responses": {
             "201": {
               "description": "successful operation",
               "schema": { "$ref": "#/definitions/Users" }
             }
           }
         }
       },
       "/allData/{id}": {
         "get": {
           "tags": ["Get One Users"],
           "summary": "Finds One users",
           "description": "not much to say",
           "operationId": "findServiceCategories",
           "produces": ["application/json", "application/xml"],
           "parameters": [],
           "responses": {
             "200": {
               "description": "successful operation",
               "schema": { "$ref": "#/definitions/Users" }
             },
             "400": { "description": "Invalid status value" }
           }
         },
         "delete": {
           "tags": ["Delete a user"],
           "summary": "Delete A Specific User",
           "description": "Not much To say",
           "operationId": "findServiceCategories",
           "produces": ["application/json", "application/xml"],
           "parameters": [],
           "responses": {
             "200": {
               "description": "successful operation",
               "schema": { "$ref": "#/definitions/Users" }
             },
             "400": { "description": "Invalid status value" }
           }
         },
         "put": {
           "tags": ["Update a user"],
           "summary": "Updates a user",
           "description": "not much to say",
           "operationId": "findServiceCategories",
           "produces": ["application/json", "application/xml"],
           "parameters": [],
           "responses": {
             "200": {
               "description": "successful operation",
               "schema": { "$ref": "#/definitions/Users" }
             },
             "400": { "description": "Invalid status value" }
           }
         }
       }
     },
     "definitions": {
       "Users": {
         "type": "object",
         "required": ["username", "email","password"],
         "properties": {
           "_id": { "type": "string" },
           "username": { "type": "string", "example": "Jeremy Germany" },
           "email": { "type": "string", "example": "jeremy@germany.gov" },
           "password": { "type": "string", "example": "I'm the one and only" },
           "birthdate": { "type": "string", "example": "10-10-1010" },
           "location": { "type": "string", "example": "London" },
           "corporate": { "type": "string", "example": "company" }
         },
         "xml": { "name": "Users" }
       }
     },
     "externalDocs": {
       "description": "Find out more about Swagger",
       "url": "http://swagger.io"
     }
   }
   